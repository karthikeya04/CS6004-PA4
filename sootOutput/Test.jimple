class Test extends java.lang.Object
{
/*Test.java*/
    static A g;

/*58*/
    public static void main(java.lang.String[])
    {
        java.io.PrintStream $r2, $r3, $r4;
        java.lang.String[] r5;
        int $i2, $i5, $i6, $i7, $i10, $i13, $i14, $i15, $i18, $i20, $i22;
        Node $r11;
        double $d3, $d4, $d6, $d9, $d10;

        r5 := @parameter0: java.lang.String[];

        goto label01;

     label01:
        $r2 = <java.lang.System: java.io.PrintStream out>;
/*60*/

        $i15 = 10000000;
/*68*/

        $d3 = 0.0;
/*69*/

     label02:
        $i14 = $i15;
/*70*/

        $i15 = $i15 + -1;
/*70*/

        if $i14 <= 0 goto label06;
/*70*/

        goto label03;

     label03:
        $d9 = 3.14 * 0.5;
/*48*/

        $d10 = $d9 * 0.5;
/*48*/

        goto label04;

     label04:
        $d4 = $d3 + $d10;
/*72*/

        $d6 = 6.28 * 0.5;
/*52*/

        goto label05;

     label05:
        $d3 = $d4 + $d6;
/*73*/

        goto label02;
/*74*/

     label06:
        goto label07;

     label07:
        virtualinvoke $r2.<java.io.PrintStream: void println(double)>($d3);
/*60*/

        $r3 = <java.lang.System: java.io.PrintStream out>;
/*61*/

        $i5 = 10000000;
/*79*/

        $i6 = 0;
/*80*/

        goto label08;

     label08:
        goto label09;

     label09:
        $r11 = new Node;
/*8*/

        specialinvoke $r11.<Node: void <init>()>();
/*8*/

        goto label10;

     label10:
        goto label11;

     label11:
        $i2 = $i5;
/*83*/

        $i5 = $i5 + -1;
/*83*/

        if $i2 <= 0 goto label18;
/*83*/

        goto label12;

     label12:
        goto label13;

     label13:
        $i10 = 1 + 2;
/*20*/

        goto label14;

     label14:
        $i7 = $i6 + $i10;
/*84*/

        goto label15;

     label15:
        goto label16;

     label16:
        $i13 = 3 + 4;
/*36*/

        goto label17;

     label17:
        $i6 = $i7 + $i13;
/*85*/

        goto label11;
/*85*/

     label18:
        goto label19;

     label19:
        virtualinvoke $r3.<java.io.PrintStream: void println(int)>($i6);
/*61*/

        $r4 = <java.lang.System: java.io.PrintStream out>;
/*62*/

        $i18 = 5 + 6;
/*91*/

        $i22 = 0;
/*96*/

     label20:
        if $i22 >= 10 goto label21;
/*97*/

        $i22 = $i22 + 5;
/*98*/

        goto label20;
/*98*/

     label21:
        goto label22;

     label22:
        $i20 = $i18 + $i22;
/*91*/

        goto label23;

     label23:
        virtualinvoke $r4.<java.io.PrintStream: void println(int)>($i20);
/*62*/

        return;
/*63*/
    }

/*64*/
    void <init>()
    {
        Test r0;

        r0 := @this: Test;

        specialinvoke r0.<java.lang.Object: void <init>()>();
/*65*/

        return;
/*65*/
    }

/*67*/
    public double heavySRs()
    {
        int $i0, i1;
        Test r2;
        double d2, d3, $d3, $d6, $d7;

        r2 := @this: Test;

        i1 = 10000000;
/*68*/

        d2 = 0.0;
/*69*/

     label1:
        $i0 = i1;
/*70*/

        i1 = i1 + -1;
/*70*/

        if $i0 <= 0 goto label5;
/*70*/

        goto label2;

     label2:
        $d6 = 3.14 * 0.5;
/*48*/

        $d7 = $d6 * 0.5;
/*48*/

        goto label3;

     label3:
        d3 = d2 + $d7;
/*72*/

        $d3 = 6.28 * 0.5;
/*52*/

        goto label4;

     label4:
        d2 = d3 + $d3;
/*73*/

        goto label1;
/*74*/

     label5:
        return d2;
/*75*/
    }

/*78*/
    public int heavyVIs()
    {
        int $i0, i3, i4, i5, $i5, $i8;
        Test r4;
        Node $r1, $r5;

        r4 := @this: Test;

        i3 = 10000000;
/*79*/

        i4 = 0;
/*80*/

        $r1 = new Node;
/*8*/

        specialinvoke $r1.<Node: void <init>()>();
/*8*/

        goto label01;

     label01:
        $r5 = new Node;
/*8*/

        specialinvoke $r5.<Node: void <init>()>();
/*8*/

        goto label02;

     label02:
        goto label03;

     label03:
        $i0 = i3;
/*83*/

        i3 = i3 + -1;
/*83*/

        if $i0 <= 0 goto label10;
/*83*/

        goto label04;

     label04:
        goto label05;

     label05:
        $i5 = 1 + 2;
/*20*/

        goto label06;

     label06:
        i5 = i4 + $i5;
/*84*/

        goto label07;

     label07:
        goto label08;

     label08:
        $i8 = 3 + 4;
/*36*/

        goto label09;

     label09:
        i4 = i5 + $i8;
/*85*/

        goto label03;
/*85*/

     label10:
        return i4;
/*87*/
    }

/*90*/
    public int m1(int, int)
    {
        int i0, i1, $i2, i4, $i1;
        Test r0;

        r0 := @this: Test;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = i0 + i1;
/*91*/

        $i1 = 0;
/*96*/

     label1:
        if $i1 >= 10 goto label2;
/*97*/

        $i1 = $i1 + i0;
/*98*/

        goto label1;
/*98*/

     label2:
        goto label3;

     label3:
        i4 = $i2 + $i1;
/*91*/

        return i4;
/*92*/
    }

/*95*/
    public int m3(int)
    {
        int i0, i1;
        Test r0;

        r0 := @this: Test;

        i0 := @parameter0: int;

        i1 = 0;
/*96*/

     label1:
        if i1 >= 10 goto label2;
/*97*/

        i1 = i1 + i0;
/*98*/

        goto label1;
/*98*/

     label2:
        return i1;
/*100*/
    }

/*103*/
    public void foo(A)
    {
        A r0;
        Node $r1;
        Test r2;

        r2 := @this: Test;

        r0 := @parameter0: A;

        $r1 = new Node;
/*104*/

        specialinvoke $r1.<Node: void <init>()>();
/*104*/

        r0.<A: Node af> = $r1;
/*104*/

        return;
/*105*/
    }
}
